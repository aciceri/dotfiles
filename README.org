* This repository
** Preface

I chose to put all the nixOS configurations inside (=configuration.nix=), that is generated by emacs using this file, i.e. (=README.org+). This configuration file then will link to the various dotfiles of the different applications inside the folder (=dotfiles/=)
This is the configuration for my home workstation, so it contains the various applications which belongs to my daily workflow.

** Installation
I'm actually using `nixos-unstable` channel but I think this should work also with the default channel.
I clone this repository in my home folder, then I open this file with Emacs and execute =M-x org-babel-tangle=. At this poing I proceed linking (=confinguration.nix=) to =(/etc/nixos/configuration.nix=), note that the root privileges are needed

#+begin_src sh
rm -f /etc/nixos/configuration.nix  # just in case
ln -s dotfiles.nix /etc/nixos/configuration.nix
#+end_src
 
* Configuration
** Variables and generic settings
Here I set the variables used in the nixOS configuration file, I also set some environment variables.
#+begin_src nix :tangle configuration.nix :noweb no-export :padline no
{ config, pkgs, lib ...} :
let
  hostname = "pc";
  user = {
    username = "andrea";
    name = "Andrea Ciceri";
    home = "/home/andrea/";
    groups = [
      "wheel"
    ];
    uid = 1000;
  };
in {
  console.consoleFont = "Lat2-Terminus16";
  console.KeyMap = "us";
  defaultLocale = "en_US.UTF-8";
  time.timeZone = "Europe/Rome";
  system.stateVersion = "20.09";
#+end_src

** Importing
The only imported nix file is (=/etc/nixos/hardware-configuration.nix=)

#+begin_src nix :tangle configuration.nix :noweb no-export :padline no
imports = [
  ./hardware-configuration.nix
];
#+end_src

It can be automatically generated with

#+begin_src sh
nixos-generate-config
#+end_src

** Booting
I'm not using EFI, things are easy:

#+begin_src nix :tangle configuration.nix :noweb no-export :padline no
boot.loader.grub = {
  enable = true;
  version = 2;
  device = "/dev/sda";
};
#+end_src

** Networking
#+begin_src nix :tangle configuration.nix :noweb no-export :padline no
networking.useDHCP = false;
networking.interfaces.enp1s0.useDHCP = true;
#+end_src

** System packages

#+begin_src nix :tangle configuration.nix :noweb no-export :padline no
environmente.packages = with pkgs; [
  # Editors
  vim emacs

  # Window manager
  sway swaylock swayidle xwayland waybar redshift-wlr

  # Graphical
  qutebrowser gimp spotify

  # Cli
  git cmatrix
];
#+end_src

** Services

#+begin_src nix :tangle configuration.nix :noweb no-export :padline no
services = {
  openssh = {
    enable = true;
  }
};
#+end_src

** Audio

#+begin_src nix :tangle configuration.nix :noweb no-export :padline no
sound.enable = true;
hardware.pulseaudio.enable = true;
#+end_src

** User settings
There is only an user.

#+begin_src nix :tangle configuration.nix :noweb no-export :padline no
users.users.${user.username} = {
  isNormaluser = true;
  uid = user.uid;
  home = user.home;
  extraGroups = user.groups;
};
#+end_src


#+begin_src nix :tangle configuration.nix :noweb no-export :padline no

#+end_src
